- name: "Retrieve GPG passphrase from control machine"
  delegate_to: localhost
  slurp:
    src: "{{ passphrase_file }}"
  register: passphrase_content
  no_log: true

- name: "Retrieve GPG key ID from control machine"
  delegate_to: localhost
  slurp:
    src: "{{ key_id_file }}"
  register: key_id_content
  no_log: true

- name: "Validate passphrase and key ID content"
  fail:
    msg: "Passphrase or Key ID file content is empty."
  when: 
    - passphrase_content.content | default("") == ""
    - key_id_content.content | default("") == ""



- name: "Reload gpg-agent on target"
  shell: gpg-connect-agent reloadagent /bye
  args:
    executable: /bin/bash
  become: true

- name: "Preset GPG passphrase on target"
  command: >
    "{{ gpg_libexecdir }}/gpg-preset-passphrase
    --preset
    -P {{ passphrase_content.content | b64decode }}
    {{ key_id_content.content | b64decode }}"
  args:
    executable: /bin/bash
  become: true
#  no_log: true
  environment:
    PINENTRY_PROGRAM: "/usr/bin/pinentry-curses"
  vars:
    gpg_libexecdir: "{{ lookup('pipe', 'gpgconf --list-dirs libexecdir') }}"



- name: "Export packages for specified releases"
  command: reprepro -b /var/www/repos/apt/{{ item }}/ export
  loop: "{{ releases }}"
  register: export_result
  ignore_errors: yes
  become: true
  environment:
    PINENTRY_PROGRAM: "/usr/bin/pinentry-curses" 
