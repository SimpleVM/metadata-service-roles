- name: "Retrieve GPG passphrase from control machine"
  delegate_to: localhost
  command: cat "{{ passphrase_file }}"
  register: passphrase_content_raw
  no_log: true

- name: "Retrieve GPG key ID from control machine"
  delegate_to: localhost
  command: cat "{{ key_id_file }}"
  register: key_id_content_raw
  no_log: true
 
- name: "Set GPG passphrase and key ID as facts"
  set_fact:
    gpg_passphrase: "{{ passphrase_content_raw.stdout }}"
    gpg_key_id: "{{ key_id_content_raw.stdout }}"

- name: "Validate passphrase and key ID content"
  fail:
    msg: "Passphrase or Key ID is empty."
  when:
    - gpg_passphrase | default("") == ""
    - gpg_key_id | default("") == ""
- name: "Reload gpg-agent on target"
  shell: gpg-connect-agent reloadagent /bye
  become: true

- name: "Preset GPG passphrase on target"
  command: >
    {{ gpg_libexecdir }}/gpg-preset-passphrase
    --preset
    -P {{ gpg_passphrase }}
    {{ gpg_key_id }}
  no_log: true
  environment:
    PINENTRY_PROGRAM: "/usr/bin/pinentry-curses"
  vars:
    gpg_libexecdir: "{{ lookup('pipe', 'gpgconf --list-dirs libexecdir') }}"
    
- name: "Export packages for specified releases"
  with_items: "{{ releases }}"
  vars:
    PINENTRY_USER_DATA: true
  expect:
    command: reprepro -b /var/www/repos/apt/{{ item }}/ export
    responses:
      'Passphrase:': '{{ gpg_passphrase }}'

